var L = {
  "version": {},
  "noConflict": function () {},
  "Util": {},
  "extend": function () {},
  "bind": function () {},
  "stamp": function () {},
  "setOptions": function () {},
  "Class": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {}
  },
  "Mixin": {},
  "Browser": {},
  "Point": function () {},
  "point": function () {},
  "Bounds": function () {},
  "bounds": function () {},
  "Transformation": function () {},
  "DomUtil": {},
  "LatLng": {
    "DEG_TO_RAD": {},
    "RAD_TO_DEG": {},
    "MAX_MARGIN": {}
  },
  "latLng": function () {},
  "LatLngBounds": function () {},
  "latLngBounds": function () {},
  "Projection": {},
  "CRS": {},
  "Map": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {},
    "Drag": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {}
    },
    "DoubleClickZoom": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {}
    },
    "ScrollWheelZoom": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {}
    },
    "TouchZoom": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {}
    },
    "Tap": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {}
    },
    "BoxZoom": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {}
    },
    "Keyboard": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {}
    }
  },
  "map": function () {},
  "TileLayer": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {},
    "WMS": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {}
    },
    "Canvas": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {},
      "WMS": {
        "extend": function () {},
        "include": function () {},
        "mergeOptions": function () {},
        "addInitHook": function () {},
        "__super__": {}
      }
    }
  },
  "tileLayer": {
    "wms": function () {},
    "canvas": function () {}
  },
  "ImageOverlay": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {}
  },
  "imageOverlay": function () {},
  "Icon": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {},
    "Default": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {},
      "imagePath": {}
    }
  },
  "icon": function () {},
  "Marker": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {}
  },
  "marker": function () {},
  "DivIcon": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {},
    "Default": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {},
      "imagePath": {}
    }
  },
  "divIcon": function () {},
  "Popup": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {}
  },
  "popup": function () {},
  "LayerGroup": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {}
  },
  "layerGroup": function () {},
  "FeatureGroup": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {},
    "EVENTS": {}
  },
  "featureGroup": function () {},
  "Path": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "CLIP_PADDING": {},
    "__super__": {},
    "SVG_NS": {},
    "SVG": {}
  },
  "LineUtil": {},
  "Polyline": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "CLIP_PADDING": {},
    "__super__": {},
    "SVG_NS": {},
    "SVG": {}
  },
  "polyline": function () {},
  "PolyUtil": {},
  "Polygon": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "CLIP_PADDING": {},
    "__super__": {},
    "SVG_NS": {},
    "SVG": {}
  },
  "polygon": function () {},
  "MultiPolyline": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {},
    "EVENTS": {}
  },
  "MultiPolygon": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {},
    "EVENTS": {}
  },
  "multiPolyline": function () {},
  "multiPolygon": function () {},
  "Rectangle": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "CLIP_PADDING": {},
    "__super__": {},
    "SVG_NS": {},
    "SVG": {}
  },
  "rectangle": function () {},
  "Circle": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "CLIP_PADDING": {},
    "__super__": {},
    "SVG_NS": {},
    "SVG": {}
  },
  "circle": function () {},
  "CircleMarker": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "CLIP_PADDING": {},
    "__super__": {},
    "SVG_NS": {},
    "SVG": {}
  },
  "circleMarker": function () {},
  "GeoJSON": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {},
    "EVENTS": {},
    "geometryToLayer": function () {},
    "coordsToLatLng": function () {},
    "coordsToLatLngs": function () {},
    "latLngToCoords": function () {},
    "latLngsToCoords": function () {},
    "getFeature": function () {},
    "asFeature": function () {}
  },
  "geoJson": function () {},
  "DomEvent": {},
  "Draggable": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "START": {},
    "END": {},
    "MOVE": {},
    "__super__": {}
  },
  "Handler": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {},
    "MarkerDrag": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {}
    }
  },
  "Control": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {},
    "Zoom": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {}
    },
    "Attribution": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {},
      "Zoom": {
        "extend": function () {},
        "include": function () {},
        "mergeOptions": function () {},
        "addInitHook": function () {},
        "__super__": {}
      }
    },
    "Scale": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {},
      "Zoom": {
        "extend": function () {},
        "include": function () {},
        "mergeOptions": function () {},
        "addInitHook": function () {},
        "__super__": {}
      },
      "Attribution": {
        "extend": function () {},
        "include": function () {},
        "mergeOptions": function () {},
        "addInitHook": function () {},
        "__super__": {},
        "Zoom": {
          "extend": function () {},
          "include": function () {},
          "mergeOptions": function () {},
          "addInitHook": function () {},
          "__super__": {}
        }
      }
    },
    "Layers": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {},
      "Zoom": {
        "extend": function () {},
        "include": function () {},
        "mergeOptions": function () {},
        "addInitHook": function () {},
        "__super__": {}
      },
      "Attribution": {
        "extend": function () {},
        "include": function () {},
        "mergeOptions": function () {},
        "addInitHook": function () {},
        "__super__": {},
        "Zoom": {
          "extend": function () {},
          "include": function () {},
          "mergeOptions": function () {},
          "addInitHook": function () {},
          "__super__": {}
        }
      },
      "Scale": {
        "extend": function () {},
        "include": function () {},
        "mergeOptions": function () {},
        "addInitHook": function () {},
        "__super__": {},
        "Zoom": {
          "extend": function () {},
          "include": function () {},
          "mergeOptions": function () {},
          "addInitHook": function () {},
          "__super__": {}
        },
        "Attribution": {
          "extend": function () {},
          "include": function () {},
          "mergeOptions": function () {},
          "addInitHook": function () {},
          "__super__": {},
          "Zoom": {
            "extend": function () {},
            "include": function () {},
            "mergeOptions": function () {},
            "addInitHook": function () {},
            "__super__": {}
          }
        }
      }
    },
    "Draw": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {},
      "Zoom": {
        "extend": function () {},
        "include": function () {},
        "mergeOptions": function () {},
        "addInitHook": function () {},
        "__super__": {}
      },
      "Attribution": {
        "extend": function () {},
        "include": function () {},
        "mergeOptions": function () {},
        "addInitHook": function () {},
        "__super__": {},
        "Zoom": {
          "extend": function () {},
          "include": function () {},
          "mergeOptions": function () {},
          "addInitHook": function () {},
          "__super__": {}
        }
      },
      "Scale": {
        "extend": function () {},
        "include": function () {},
        "mergeOptions": function () {},
        "addInitHook": function () {},
        "__super__": {},
        "Zoom": {
          "extend": function () {},
          "include": function () {},
          "mergeOptions": function () {},
          "addInitHook": function () {},
          "__super__": {}
        },
        "Attribution": {
          "extend": function () {},
          "include": function () {},
          "mergeOptions": function () {},
          "addInitHook": function () {},
          "__super__": {},
          "Zoom": {
            "extend": function () {},
            "include": function () {},
            "mergeOptions": function () {},
            "addInitHook": function () {},
            "__super__": {}
          }
        }
      },
      "Layers": {
        "extend": function () {},
        "include": function () {},
        "mergeOptions": function () {},
        "addInitHook": function () {},
        "__super__": {},
        "Zoom": {
          "extend": function () {},
          "include": function () {},
          "mergeOptions": function () {},
          "addInitHook": function () {},
          "__super__": {}
        },
        "Attribution": {
          "extend": function () {},
          "include": function () {},
          "mergeOptions": function () {},
          "addInitHook": function () {},
          "__super__": {},
          "Zoom": {
            "extend": function () {},
            "include": function () {},
            "mergeOptions": function () {},
            "addInitHook": function () {},
            "__super__": {}
          }
        },
        "Scale": {
          "extend": function () {},
          "include": function () {},
          "mergeOptions": function () {},
          "addInitHook": function () {},
          "__super__": {},
          "Zoom": {
            "extend": function () {},
            "include": function () {},
            "mergeOptions": function () {},
            "addInitHook": function () {},
            "__super__": {}
          },
          "Attribution": {
            "extend": function () {},
            "include": function () {},
            "mergeOptions": function () {},
            "addInitHook": function () {},
            "__super__": {},
            "Zoom": {
              "extend": function () {},
              "include": function () {},
              "mergeOptions": function () {},
              "addInitHook": function () {},
              "__super__": {}
            }
          }
        }
      }
    }
  },
  "control": {
    "zoom": function () {},
    "attribution": function () {},
    "scale": function () {},
    "layers": function () {}
  },
  "PosAnimation": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {}
  },
  "mapbox": {},
  "drawVersion": {},
  "drawLocal": {},
  "Draw": {},
  "SimpleShape": {},
  "Edit": {},
  "LatLngUtil": {},
  "GeometryUtil": {},
  "Toolbar": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {}
  },
  "Tooltip": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {}
  },
  "DrawToolbar": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {},
    "TYPE": {}
  },
  "EditToolbar": {
    "extend": function () {},
    "include": function () {},
    "mergeOptions": function () {},
    "addInitHook": function () {},
    "__super__": {},
    "TYPE": {},
    "Edit": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {},
      "MarkerDrag": {
        "extend": function () {},
        "include": function () {},
        "mergeOptions": function () {},
        "addInitHook": function () {},
        "__super__": {}
      },
      "TYPE": {}
    },
    "Delete": {
      "extend": function () {},
      "include": function () {},
      "mergeOptions": function () {},
      "addInitHook": function () {},
      "__super__": {},
      "MarkerDrag": {
        "extend": function () {},
        "include": function () {},
        "mergeOptions": function () {},
        "addInitHook": function () {},
        "__super__": {}
      },
      "TYPE": {}
    }
  }
};
L.Point.prototype = {
  "clone": function () {},
  "add": function () {},
  "_add": function () {},
  "subtract": function () {},
  "_subtract": function () {},
  "divideBy": function () {},
  "_divideBy": function () {},
  "multiplyBy": function () {},
  "_multiplyBy": function () {},
  "round": function () {},
  "_round": function () {},
  "floor": function () {},
  "_floor": function () {},
  "distanceTo": function () {},
  "equals": function () {},
  "contains": function () {},
  "toString": function () {}
};
L.Bounds.prototype = {
  "extend": function () {},
  "getCenter": function () {},
  "getBottomLeft": function () {},
  "getTopRight": function () {},
  "getSize": function () {},
  "contains": function () {},
  "intersects": function () {},
  "isValid": function () {}
};
L.Transformation.prototype = {
  "transform": function () {},
  "_transform": function () {},
  "untransform": function () {}
};
L.LatLng.prototype = {
  "equals": function () {},
  "toString": function () {},
  "distanceTo": function () {},
  "wrap": function () {}
};
L.LatLngBounds.prototype = {
  "extend": function () {},
  "pad": function () {},
  "getCenter": function () {},
  "getSouthWest": function () {},
  "getNorthEast": function () {},
  "getNorthWest": function () {},
  "getSouthEast": function () {},
  "getWest": function () {},
  "getSouth": function () {},
  "getEast": function () {},
  "getNorth": function () {},
  "contains": function () {},
  "intersects": function () {},
  "toBBoxString": function () {},
  "equals": function () {},
  "isValid": function () {}
};
L.Map.prototype = {
  "constructor": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "options": function () {},
  "initialize": function () {},
  "setView": function () {},
  "setZoom": function () {},
  "zoomIn": function () {},
  "zoomOut": function () {},
  "setZoomAround": function () {},
  "fitBounds": function () {},
  "fitWorld": function () {},
  "panTo": function () {},
  "panBy": function () {},
  "setMaxBounds": function () {},
  "panInsideBounds": function () {},
  "addLayer": function () {},
  "removeLayer": function () {},
  "hasLayer": function () {},
  "eachLayer": function () {},
  "invalidateSize": function () {},
  "addHandler": function () {},
  "remove": function () {},
  "getCenter": function () {},
  "getZoom": function () {},
  "getBounds": function () {},
  "getMinZoom": function () {},
  "getMaxZoom": function () {},
  "getBoundsZoom": function () {},
  "getSize": function () {},
  "getPixelBounds": function () {},
  "getPixelOrigin": function () {},
  "getPanes": function () {},
  "getContainer": function () {},
  "getZoomScale": function () {},
  "getScaleZoom": function () {},
  "project": function () {},
  "unproject": function () {},
  "layerPointToLatLng": function () {},
  "latLngToLayerPoint": function () {},
  "containerPointToLayerPoint": function () {},
  "layerPointToContainerPoint": function () {},
  "containerPointToLatLng": function () {},
  "latLngToContainerPoint": function () {},
  "mouseEventToContainerPoint": function () {},
  "mouseEventToLayerPoint": function () {},
  "mouseEventToLatLng": function () {},
  "_initContainer": function () {},
  "_initLayout": function () {},
  "_initPanes": function () {},
  "_createPane": function () {},
  "_clearPanes": function () {},
  "_addLayers": function () {},
  "_resetView": function () {},
  "_rawPanBy": function () {},
  "_getZoomSpan": function () {},
  "_updateZoomLevels": function () {},
  "_panInsideMaxBounds": function () {},
  "_checkIfLoaded": function () {},
  "_initEvents": function () {},
  "_onResize": function () {},
  "_onMouseClick": function () {},
  "_fireMouseEvent": function () {},
  "_onTileLayerLoad": function () {},
  "_clearHandlers": function () {},
  "whenReady": function () {},
  "_layerAdd": function () {},
  "_getMapPanePos": function () {},
  "_moved": function () {},
  "_getTopLeftPoint": function () {},
  "_getNewTopLeftPoint": function () {},
  "_latLngToNewLayerPoint": function () {},
  "_getCenterLayerPoint": function () {},
  "_getCenterOffset": function () {},
  "_limitCenter": function () {},
  "_limitOffset": function () {},
  "_getBoundsOffset": function () {},
  "_rebound": function () {},
  "_limitZoom": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "openPopup": function () {},
  "closePopup": function () {},
  "_updatePathViewport": function () {},
  "_initPathRoot": function () {},
  "_animatePathZoom": function () {},
  "_endPathZoom": function () {},
  "_updateSvgViewport": function () {},
  "addControl": function () {},
  "removeControl": function () {},
  "_initControlPos": function () {},
  "_clearControlPos": function () {},
  "_onPanTransitionStep": function () {},
  "_onPanTransitionEnd": function () {},
  "_tryAnimatedPan": function () {},
  "_catchTransitionEnd": function () {},
  "_nothingToAnimate": function () {},
  "_tryAnimatedZoom": function () {},
  "_animateZoom": function () {},
  "_onZoomTransitionEnd": function () {},
  "_defaultLocateOptions": function () {},
  "locate": function () {},
  "stopLocate": function () {},
  "_handleGeolocationError": function () {},
  "_handleGeolocationResponse": function () {}
};
L.Map.Drag.prototype = {
  "constructor": function () {},
  "addHooks": function () {},
  "removeHooks": function () {},
  "moved": function () {},
  "_onDragStart": function () {},
  "_onDrag": function () {},
  "_onViewReset": function () {},
  "_onPreDrag": function () {},
  "_onDragEnd": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "enable": function () {},
  "disable": function () {},
  "enabled": function () {}
};
L.Map.DoubleClickZoom.prototype = {
  "constructor": function () {},
  "addHooks": function () {},
  "removeHooks": function () {},
  "_onDoubleClick": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "enable": function () {},
  "disable": function () {},
  "enabled": function () {}
};
L.Map.ScrollWheelZoom.prototype = {
  "constructor": function () {},
  "addHooks": function () {},
  "removeHooks": function () {},
  "_onWheelScroll": function () {},
  "_performZoom": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "enable": function () {},
  "disable": function () {},
  "enabled": function () {}
};
L.Map.TouchZoom.prototype = {
  "constructor": function () {},
  "addHooks": function () {},
  "removeHooks": function () {},
  "_onTouchStart": function () {},
  "_onTouchMove": function () {},
  "_updateOnMove": function () {},
  "_onTouchEnd": function () {},
  "_getScaleOrigin": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "enable": function () {},
  "disable": function () {},
  "enabled": function () {}
};
L.Map.Tap.prototype = {
  "constructor": function () {},
  "addHooks": function () {},
  "removeHooks": function () {},
  "_onDown": function () {},
  "_onUp": function () {},
  "_isTapValid": function () {},
  "_onMove": function () {},
  "_simulateEvent": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "enable": function () {},
  "disable": function () {},
  "enabled": function () {}
};
L.Map.BoxZoom.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "addHooks": function () {},
  "removeHooks": function () {},
  "moved": function () {},
  "_onMouseDown": function () {},
  "_onMouseMove": function () {},
  "_finish": function () {},
  "_onMouseUp": function () {},
  "_onKeyDown": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "enable": function () {},
  "disable": function () {},
  "enabled": function () {}
};
L.Map.Keyboard.prototype = {
  "constructor": function () {},
  "keyCodes": function () {},
  "initialize": function () {},
  "addHooks": function () {},
  "removeHooks": function () {},
  "_onMouseDown": function () {},
  "_onFocus": function () {},
  "_onBlur": function () {},
  "_setPanOffset": function () {},
  "_setZoomOffset": function () {},
  "_addHooks": function () {},
  "_removeHooks": function () {},
  "_onKeyDown": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "enable": function () {},
  "disable": function () {},
  "enabled": function () {}
};
L.TileLayer.prototype = {
  "constructor": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "addTo": function () {},
  "onRemove": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "getAttribution": function () {},
  "getContainer": function () {},
  "setOpacity": function () {},
  "setZIndex": function () {},
  "setUrl": function () {},
  "redraw": function () {},
  "_updateZIndex": function () {},
  "_setAutoZIndex": function () {},
  "_updateOpacity": function () {},
  "_initContainer": function () {},
  "_reset": function () {},
  "_getTileSize": function () {},
  "_update": function () {},
  "_addTilesFromCenterOut": function () {},
  "_tileShouldBeLoaded": function () {},
  "_removeOtherTiles": function () {},
  "_removeTile": function () {},
  "_addTile": function () {},
  "_getZoomForUrl": function () {},
  "_getTilePos": function () {},
  "getTileUrl": function () {},
  "_getWrapTileNum": function () {},
  "_adjustTilePoint": function () {},
  "_getSubdomain": function () {},
  "_getTile": function () {},
  "_resetTile": function () {},
  "_createTile": function () {},
  "_loadTile": function () {},
  "_tileLoaded": function () {},
  "_tileOnLoad": function () {},
  "_tileOnError": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "_animateZoom": function () {},
  "_endZoomAnim": function () {},
  "_clearBgBuffer": function () {},
  "_prepareBgBuffer": function () {},
  "_getLoadedTilesPercentage": function () {},
  "_stopLoadingImages": function () {}
};
L.TileLayer.WMS.prototype = {
  "constructor": function () {},
  "defaultWmsParams": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "getTileUrl": function () {},
  "setParams": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "options": function () {},
  "addTo": function () {},
  "onRemove": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "getAttribution": function () {},
  "getContainer": function () {},
  "setOpacity": function () {},
  "setZIndex": function () {},
  "setUrl": function () {},
  "redraw": function () {},
  "_updateZIndex": function () {},
  "_setAutoZIndex": function () {},
  "_updateOpacity": function () {},
  "_initContainer": function () {},
  "_reset": function () {},
  "_getTileSize": function () {},
  "_update": function () {},
  "_addTilesFromCenterOut": function () {},
  "_tileShouldBeLoaded": function () {},
  "_removeOtherTiles": function () {},
  "_removeTile": function () {},
  "_addTile": function () {},
  "_getZoomForUrl": function () {},
  "_getTilePos": function () {},
  "_getWrapTileNum": function () {},
  "_adjustTilePoint": function () {},
  "_getSubdomain": function () {},
  "_getTile": function () {},
  "_resetTile": function () {},
  "_createTile": function () {},
  "_loadTile": function () {},
  "_tileLoaded": function () {},
  "_tileOnLoad": function () {},
  "_tileOnError": function () {},
  "_animateZoom": function () {},
  "_endZoomAnim": function () {},
  "_clearBgBuffer": function () {},
  "_prepareBgBuffer": function () {},
  "_getLoadedTilesPercentage": function () {},
  "_stopLoadingImages": function () {}
};
L.TileLayer.Canvas.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "redraw": function () {},
  "_redrawTile": function () {},
  "_createTile": function () {},
  "_loadTile": function () {},
  "drawTile": function () {},
  "tileDrawn": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "onAdd": function () {},
  "addTo": function () {},
  "onRemove": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "getAttribution": function () {},
  "getContainer": function () {},
  "setOpacity": function () {},
  "setZIndex": function () {},
  "setUrl": function () {},
  "_updateZIndex": function () {},
  "_setAutoZIndex": function () {},
  "_updateOpacity": function () {},
  "_initContainer": function () {},
  "_reset": function () {},
  "_getTileSize": function () {},
  "_update": function () {},
  "_addTilesFromCenterOut": function () {},
  "_tileShouldBeLoaded": function () {},
  "_removeOtherTiles": function () {},
  "_removeTile": function () {},
  "_addTile": function () {},
  "_getZoomForUrl": function () {},
  "_getTilePos": function () {},
  "getTileUrl": function () {},
  "_getWrapTileNum": function () {},
  "_adjustTilePoint": function () {},
  "_getSubdomain": function () {},
  "_getTile": function () {},
  "_resetTile": function () {},
  "_tileLoaded": function () {},
  "_tileOnLoad": function () {},
  "_tileOnError": function () {},
  "_animateZoom": function () {},
  "_endZoomAnim": function () {},
  "_clearBgBuffer": function () {},
  "_prepareBgBuffer": function () {},
  "_getLoadedTilesPercentage": function () {},
  "_stopLoadingImages": function () {}
};
L.TileLayer.Canvas.WMS.prototype = {
  "constructor": function () {},
  "defaultWmsParams": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "getTileUrl": function () {},
  "setParams": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "options": function () {},
  "addTo": function () {},
  "onRemove": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "getAttribution": function () {},
  "getContainer": function () {},
  "setOpacity": function () {},
  "setZIndex": function () {},
  "setUrl": function () {},
  "redraw": function () {},
  "_updateZIndex": function () {},
  "_setAutoZIndex": function () {},
  "_updateOpacity": function () {},
  "_initContainer": function () {},
  "_reset": function () {},
  "_getTileSize": function () {},
  "_update": function () {},
  "_addTilesFromCenterOut": function () {},
  "_tileShouldBeLoaded": function () {},
  "_removeOtherTiles": function () {},
  "_removeTile": function () {},
  "_addTile": function () {},
  "_getZoomForUrl": function () {},
  "_getTilePos": function () {},
  "_getWrapTileNum": function () {},
  "_adjustTilePoint": function () {},
  "_getSubdomain": function () {},
  "_getTile": function () {},
  "_resetTile": function () {},
  "_createTile": function () {},
  "_loadTile": function () {},
  "_tileLoaded": function () {},
  "_tileOnLoad": function () {},
  "_tileOnError": function () {},
  "_animateZoom": function () {},
  "_endZoomAnim": function () {},
  "_clearBgBuffer": function () {},
  "_prepareBgBuffer": function () {},
  "_getLoadedTilesPercentage": function () {},
  "_stopLoadingImages": function () {}
};
L.ImageOverlay.prototype = {
  "constructor": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "addTo": function () {},
  "setOpacity": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "setUrl": function () {},
  "getAttribution": function () {},
  "_initImage": function () {},
  "_animateZoom": function () {},
  "_reset": function () {},
  "_onImageLoad": function () {},
  "_updateOpacity": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {}
};
L.Icon.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "createIcon": function () {},
  "createShadow": function () {},
  "_createIcon": function () {},
  "_setIconStyles": function () {},
  "_createImg": function () {},
  "_getIconUrl": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {}
};
L.Icon.Default.prototype = {
  "constructor": function () {},
  "options": function () {},
  "_getIconUrl": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "createIcon": function () {},
  "createShadow": function () {},
  "_createIcon": function () {},
  "_setIconStyles": function () {},
  "_createImg": function () {}
};
L.Marker.prototype = {
  "constructor": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "addTo": function () {},
  "onRemove": function () {},
  "getLatLng": function () {},
  "setLatLng": function () {},
  "setZIndexOffset": function () {},
  "setIcon": function () {},
  "update": function () {},
  "_initIcon": function () {},
  "_removeIcon": function () {},
  "_removeShadow": function () {},
  "_setPos": function () {},
  "_updateZIndex": function () {},
  "_animateZoom": function () {},
  "_initInteraction": function () {},
  "_onMouseClick": function () {},
  "_onKeyPress": function () {},
  "_fireMouseEvent": function () {},
  "setOpacity": function () {},
  "_updateOpacity": function () {},
  "_bringToFront": function () {},
  "_resetZIndex": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "openPopup": function () {},
  "closePopup": function () {},
  "togglePopup": function () {},
  "bindPopup": function () {},
  "setPopupContent": function () {},
  "unbindPopup": function () {},
  "getPopup": function () {},
  "_movePopup": function () {},
  "toGeoJSON": function () {}
};
L.DivIcon.prototype = {
  "constructor": function () {},
  "options": function () {},
  "createIcon": function () {},
  "createShadow": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "_createIcon": function () {},
  "_setIconStyles": function () {},
  "_createImg": function () {},
  "_getIconUrl": function () {}
};
L.DivIcon.Default.prototype = {
  "constructor": function () {},
  "options": function () {},
  "_getIconUrl": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "createIcon": function () {},
  "createShadow": function () {},
  "_createIcon": function () {},
  "_setIconStyles": function () {},
  "_createImg": function () {}
};
L.Popup.prototype = {
  "constructor": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "addTo": function () {},
  "openOn": function () {},
  "onRemove": function () {},
  "getLatLng": function () {},
  "setLatLng": function () {},
  "getContent": function () {},
  "setContent": function () {},
  "update": function () {},
  "_getEvents": function () {},
  "_close": function () {},
  "_initLayout": function () {},
  "_updateContent": function () {},
  "_updateLayout": function () {},
  "_updatePosition": function () {},
  "_zoomAnimation": function () {},
  "_adjustPan": function () {},
  "_onCloseButtonClick": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {}
};
L.LayerGroup.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "addLayer": function () {},
  "removeLayer": function () {},
  "hasLayer": function () {},
  "clearLayers": function () {},
  "invoke": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "addTo": function () {},
  "eachLayer": function () {},
  "getLayer": function () {},
  "getLayers": function () {},
  "setZIndex": function () {},
  "getLayerId": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "toGeoJSON": function () {}
};
L.FeatureGroup.prototype = {
  "constructor": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "addLayer": function () {},
  "removeLayer": function () {},
  "bindPopup": function () {},
  "openPopup": function () {},
  "setStyle": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "getBounds": function () {},
  "_propagateEvent": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "hasLayer": function () {},
  "clearLayers": function () {},
  "invoke": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "addTo": function () {},
  "eachLayer": function () {},
  "getLayer": function () {},
  "getLayers": function () {},
  "setZIndex": function () {},
  "getLayerId": function () {},
  "toGeoJSON": function () {}
};
L.Path.prototype = {
  "constructor": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "getPathString": function () {},
  "_createElement": function () {},
  "_initElements": function () {},
  "_initPath": function () {},
  "_initStyle": function () {},
  "_updateStyle": function () {},
  "_updatePath": function () {},
  "_initEvents": function () {},
  "_onMouseClick": function () {},
  "_fireMouseEvent": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "bindPopup": function () {},
  "unbindPopup": function () {},
  "openPopup": function () {},
  "closePopup": function () {},
  "_openPopup": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "addTo": function () {},
  "onRemove": function () {},
  "projectLatlngs": function () {},
  "setStyle": function () {},
  "redraw": function () {}
};
L.Polyline.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "options": function () {},
  "projectLatlngs": function () {},
  "getPathString": function () {},
  "getLatLngs": function () {},
  "setLatLngs": function () {},
  "addLatLng": function () {},
  "spliceLatLngs": function () {},
  "closestLayerPoint": function () {},
  "getBounds": function () {},
  "_convertLatLngs": function () {},
  "_initEvents": function () {},
  "_getPathPartStr": function () {},
  "_clipPoints": function () {},
  "_simplifyPoints": function () {},
  "_updatePath": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "toGeoJSON": function () {},
  "intersects": function () {},
  "newLatLngIntersects": function () {},
  "newPointIntersects": function () {},
  "_tooFewPointsForIntersection": function () {},
  "_lineSegmentsIntersectsRange": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "_createElement": function () {},
  "_initElements": function () {},
  "_initPath": function () {},
  "_initStyle": function () {},
  "_updateStyle": function () {},
  "_onMouseClick": function () {},
  "_fireMouseEvent": function () {},
  "bindPopup": function () {},
  "unbindPopup": function () {},
  "openPopup": function () {},
  "closePopup": function () {},
  "_openPopup": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "onAdd": function () {},
  "addTo": function () {},
  "onRemove": function () {},
  "setStyle": function () {},
  "redraw": function () {}
};
L.Polygon.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "_initWithHoles": function () {},
  "projectLatlngs": function () {},
  "setLatLngs": function () {},
  "_clipPoints": function () {},
  "_getPathPartStr": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "toGeoJSON": function () {},
  "intersects": function () {},
  "getPathString": function () {},
  "getLatLngs": function () {},
  "addLatLng": function () {},
  "spliceLatLngs": function () {},
  "closestLayerPoint": function () {},
  "getBounds": function () {},
  "_convertLatLngs": function () {},
  "_initEvents": function () {},
  "_simplifyPoints": function () {},
  "_updatePath": function () {},
  "newLatLngIntersects": function () {},
  "newPointIntersects": function () {},
  "_tooFewPointsForIntersection": function () {},
  "_lineSegmentsIntersectsRange": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "_createElement": function () {},
  "_initElements": function () {},
  "_initPath": function () {},
  "_initStyle": function () {},
  "_updateStyle": function () {},
  "_onMouseClick": function () {},
  "_fireMouseEvent": function () {},
  "bindPopup": function () {},
  "unbindPopup": function () {},
  "openPopup": function () {},
  "closePopup": function () {},
  "_openPopup": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "onAdd": function () {},
  "addTo": function () {},
  "onRemove": function () {},
  "setStyle": function () {},
  "redraw": function () {}
};
L.MultiPolyline.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "setLatLngs": function () {},
  "getLatLngs": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "toGeoJSON": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "addLayer": function () {},
  "removeLayer": function () {},
  "bindPopup": function () {},
  "openPopup": function () {},
  "setStyle": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "getBounds": function () {},
  "_propagateEvent": function () {},
  "hasLayer": function () {},
  "clearLayers": function () {},
  "invoke": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "addTo": function () {},
  "eachLayer": function () {},
  "getLayer": function () {},
  "getLayers": function () {},
  "setZIndex": function () {},
  "getLayerId": function () {}
};
L.MultiPolygon.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "setLatLngs": function () {},
  "getLatLngs": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "toGeoJSON": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "addLayer": function () {},
  "removeLayer": function () {},
  "bindPopup": function () {},
  "openPopup": function () {},
  "setStyle": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "getBounds": function () {},
  "_propagateEvent": function () {},
  "hasLayer": function () {},
  "clearLayers": function () {},
  "invoke": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "addTo": function () {},
  "eachLayer": function () {},
  "getLayer": function () {},
  "getLayers": function () {},
  "setZIndex": function () {},
  "getLayerId": function () {}
};
L.Rectangle.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "setBounds": function () {},
  "_boundsToLatLngs": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "options": function () {},
  "_initWithHoles": function () {},
  "projectLatlngs": function () {},
  "setLatLngs": function () {},
  "_clipPoints": function () {},
  "_getPathPartStr": function () {},
  "toGeoJSON": function () {},
  "intersects": function () {},
  "getPathString": function () {},
  "getLatLngs": function () {},
  "addLatLng": function () {},
  "spliceLatLngs": function () {},
  "closestLayerPoint": function () {},
  "getBounds": function () {},
  "_convertLatLngs": function () {},
  "_initEvents": function () {},
  "_simplifyPoints": function () {},
  "_updatePath": function () {},
  "newLatLngIntersects": function () {},
  "newPointIntersects": function () {},
  "_tooFewPointsForIntersection": function () {},
  "_lineSegmentsIntersectsRange": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "_createElement": function () {},
  "_initElements": function () {},
  "_initPath": function () {},
  "_initStyle": function () {},
  "_updateStyle": function () {},
  "_onMouseClick": function () {},
  "_fireMouseEvent": function () {},
  "bindPopup": function () {},
  "unbindPopup": function () {},
  "openPopup": function () {},
  "closePopup": function () {},
  "_openPopup": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "onAdd": function () {},
  "addTo": function () {},
  "onRemove": function () {},
  "setStyle": function () {},
  "redraw": function () {}
};
L.Circle.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "options": function () {},
  "setLatLng": function () {},
  "setRadius": function () {},
  "projectLatlngs": function () {},
  "getBounds": function () {},
  "getLatLng": function () {},
  "getPathString": function () {},
  "getRadius": function () {},
  "_getLatRadius": function () {},
  "_getLngRadius": function () {},
  "_checkIfEmpty": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "toGeoJSON": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "_createElement": function () {},
  "_initElements": function () {},
  "_initPath": function () {},
  "_initStyle": function () {},
  "_updateStyle": function () {},
  "_updatePath": function () {},
  "_initEvents": function () {},
  "_onMouseClick": function () {},
  "_fireMouseEvent": function () {},
  "bindPopup": function () {},
  "unbindPopup": function () {},
  "openPopup": function () {},
  "closePopup": function () {},
  "_openPopup": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "onAdd": function () {},
  "addTo": function () {},
  "onRemove": function () {},
  "setStyle": function () {},
  "redraw": function () {}
};
L.CircleMarker.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "projectLatlngs": function () {},
  "_updateStyle": function () {},
  "setLatLng": function () {},
  "setRadius": function () {},
  "getRadius": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "toGeoJSON": function () {},
  "getBounds": function () {},
  "getLatLng": function () {},
  "getPathString": function () {},
  "_getLatRadius": function () {},
  "_getLngRadius": function () {},
  "_checkIfEmpty": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "_createElement": function () {},
  "_initElements": function () {},
  "_initPath": function () {},
  "_initStyle": function () {},
  "_updatePath": function () {},
  "_initEvents": function () {},
  "_onMouseClick": function () {},
  "_fireMouseEvent": function () {},
  "bindPopup": function () {},
  "unbindPopup": function () {},
  "openPopup": function () {},
  "closePopup": function () {},
  "_openPopup": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "onAdd": function () {},
  "addTo": function () {},
  "onRemove": function () {},
  "setStyle": function () {},
  "redraw": function () {}
};
L.GeoJSON.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "addData": function () {},
  "resetStyle": function () {},
  "setStyle": function () {},
  "_setLayerStyle": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "addLayer": function () {},
  "removeLayer": function () {},
  "bindPopup": function () {},
  "openPopup": function () {},
  "bringToFront": function () {},
  "bringToBack": function () {},
  "getBounds": function () {},
  "_propagateEvent": function () {},
  "hasLayer": function () {},
  "clearLayers": function () {},
  "invoke": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "addTo": function () {},
  "eachLayer": function () {},
  "getLayer": function () {},
  "getLayers": function () {},
  "setZIndex": function () {},
  "getLayerId": function () {},
  "toGeoJSON": function () {}
};
L.Draggable.prototype = {
  "constructor": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "initialize": function () {},
  "enable": function () {},
  "disable": function () {},
  "_onDown": function () {},
  "_onMove": function () {},
  "_updatePosition": function () {},
  "_onUp": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {}
};
L.Handler.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "enable": function () {},
  "disable": function () {},
  "enabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {}
};
L.Handler.MarkerDrag.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "addHooks": function () {},
  "removeHooks": function () {},
  "moved": function () {},
  "_onDragStart": function () {},
  "_onDrag": function () {},
  "_onDragEnd": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "enable": function () {},
  "disable": function () {},
  "enabled": function () {}
};
L.Control.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {}
};
L.Control.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Attribution.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "setPrefix": function () {},
  "addAttribution": function () {},
  "removeAttribution": function () {},
  "_update": function () {},
  "_onLayerAdd": function () {},
  "_onLayerRemove": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Attribution.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Scale.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_addScales": function () {},
  "_update": function () {},
  "_updateScales": function () {},
  "_updateMetric": function () {},
  "_updateImperial": function () {},
  "_getScaleWidth": function () {},
  "_getRoundNum": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Scale.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Scale.Attribution.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "setPrefix": function () {},
  "addAttribution": function () {},
  "removeAttribution": function () {},
  "_update": function () {},
  "_onLayerAdd": function () {},
  "_onLayerRemove": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Scale.Attribution.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Layers.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "addBaseLayer": function () {},
  "addOverlay": function () {},
  "removeLayer": function () {},
  "_initLayout": function () {},
  "_addLayer": function () {},
  "_update": function () {},
  "_onLayerChange": function () {},
  "_createRadioElement": function () {},
  "_addItem": function () {},
  "_onInputClick": function () {},
  "_expand": function () {},
  "_collapse": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Layers.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Layers.Attribution.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "setPrefix": function () {},
  "addAttribution": function () {},
  "removeAttribution": function () {},
  "_update": function () {},
  "_onLayerAdd": function () {},
  "_onLayerRemove": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Layers.Attribution.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Layers.Scale.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_addScales": function () {},
  "_update": function () {},
  "_updateScales": function () {},
  "_updateMetric": function () {},
  "_updateImperial": function () {},
  "_getScaleWidth": function () {},
  "_getRoundNum": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Layers.Scale.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Layers.Scale.Attribution.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "setPrefix": function () {},
  "addAttribution": function () {},
  "removeAttribution": function () {},
  "_update": function () {},
  "_onLayerAdd": function () {},
  "_onLayerRemove": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Layers.Scale.Attribution.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "setDrawingOptions": function () {},
  "_toolbarEnabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Attribution.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "setPrefix": function () {},
  "addAttribution": function () {},
  "removeAttribution": function () {},
  "_update": function () {},
  "_onLayerAdd": function () {},
  "_onLayerRemove": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Attribution.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Scale.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_addScales": function () {},
  "_update": function () {},
  "_updateScales": function () {},
  "_updateMetric": function () {},
  "_updateImperial": function () {},
  "_getScaleWidth": function () {},
  "_getRoundNum": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Scale.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Scale.Attribution.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "setPrefix": function () {},
  "addAttribution": function () {},
  "removeAttribution": function () {},
  "_update": function () {},
  "_onLayerAdd": function () {},
  "_onLayerRemove": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Scale.Attribution.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Layers.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "addBaseLayer": function () {},
  "addOverlay": function () {},
  "removeLayer": function () {},
  "_initLayout": function () {},
  "_addLayer": function () {},
  "_update": function () {},
  "_onLayerChange": function () {},
  "_createRadioElement": function () {},
  "_addItem": function () {},
  "_onInputClick": function () {},
  "_expand": function () {},
  "_collapse": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Layers.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Layers.Attribution.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "setPrefix": function () {},
  "addAttribution": function () {},
  "removeAttribution": function () {},
  "_update": function () {},
  "_onLayerAdd": function () {},
  "_onLayerRemove": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Layers.Attribution.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Layers.Scale.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_addScales": function () {},
  "_update": function () {},
  "_updateScales": function () {},
  "_updateMetric": function () {},
  "_updateImperial": function () {},
  "_getScaleWidth": function () {},
  "_getRoundNum": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Layers.Scale.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Layers.Scale.Attribution.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "setPrefix": function () {},
  "addAttribution": function () {},
  "removeAttribution": function () {},
  "_update": function () {},
  "_onLayerAdd": function () {},
  "_onLayerRemove": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.Control.Draw.Layers.Scale.Attribution.Zoom.prototype = {
  "constructor": function () {},
  "options": function () {},
  "onAdd": function () {},
  "onRemove": function () {},
  "_zoomIn": function () {},
  "_zoomOut": function () {},
  "_createButton": function () {},
  "_updateDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "initialize": function () {},
  "getPosition": function () {},
  "setPosition": function () {},
  "getContainer": function () {},
  "addTo": function () {},
  "removeFrom": function () {},
  "_refocusOnMap": function () {}
};
L.PosAnimation.prototype = {
  "constructor": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "run": function () {},
  "stop": function () {},
  "_onStep": function () {},
  "_transformRe": function () {},
  "_getPos": function () {},
  "_onTransitionEnd": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {}
};
L.Toolbar.prototype = {
  "constructor": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "initialize": function () {},
  "enabled": function () {},
  "disable": function () {},
  "addToolbar": function () {},
  "removeToolbar": function () {},
  "_initModeHandler": function () {},
  "_createButton": function () {},
  "_disposeButton": function () {},
  "_handlerActivated": function () {},
  "_handlerDeactivated": function () {},
  "_createActions": function () {},
  "_showActionsToolbar": function () {},
  "_hideActionsToolbar": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {}
};
L.Tooltip.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "dispose": function () {},
  "updateContent": function () {},
  "updatePosition": function () {},
  "showAsError": function () {},
  "removeError": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {}
};
L.DrawToolbar.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "getModeHandlers": function () {},
  "getActions": function () {},
  "setOptions": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "enabled": function () {},
  "disable": function () {},
  "addToolbar": function () {},
  "removeToolbar": function () {},
  "_initModeHandler": function () {},
  "_createButton": function () {},
  "_disposeButton": function () {},
  "_handlerActivated": function () {},
  "_handlerDeactivated": function () {},
  "_createActions": function () {},
  "_showActionsToolbar": function () {},
  "_hideActionsToolbar": function () {}
};
L.EditToolbar.prototype = {
  "constructor": function () {},
  "options": function () {},
  "initialize": function () {},
  "getModeHandlers": function () {},
  "getActions": function () {},
  "addToolbar": function () {},
  "removeToolbar": function () {},
  "disable": function () {},
  "_save": function () {},
  "_checkDisabled": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "enabled": function () {},
  "_initModeHandler": function () {},
  "_createButton": function () {},
  "_disposeButton": function () {},
  "_handlerActivated": function () {},
  "_handlerDeactivated": function () {},
  "_createActions": function () {},
  "_showActionsToolbar": function () {},
  "_hideActionsToolbar": function () {}
};
L.EditToolbar.Edit.prototype = {
  "constructor": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "initialize": function () {},
  "enable": function () {},
  "disable": function () {},
  "addHooks": function () {},
  "removeHooks": function () {},
  "revertLayers": function () {},
  "save": function () {},
  "_backupLayer": function () {},
  "_revertLayer": function () {},
  "_enableLayerEdit": function () {},
  "_disableLayerEdit": function () {},
  "_onMouseMove": function () {},
  "_hasAvailableLayers": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "enabled": function () {}
};
L.EditToolbar.Edit.MarkerDrag.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "addHooks": function () {},
  "removeHooks": function () {},
  "moved": function () {},
  "_onDragStart": function () {},
  "_onDrag": function () {},
  "_onDragEnd": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "enable": function () {},
  "disable": function () {},
  "enabled": function () {}
};
L.EditToolbar.Delete.prototype = {
  "constructor": function () {},
  "addEventListener": function () {},
  "hasEventListeners": function () {},
  "removeEventListener": function () {},
  "clearAllEventListeners": function () {},
  "fireEvent": function () {},
  "addOneTimeEventListener": function () {},
  "on": function () {},
  "off": function () {},
  "once": function () {},
  "fire": function () {},
  "initialize": function () {},
  "enable": function () {},
  "disable": function () {},
  "addHooks": function () {},
  "removeHooks": function () {},
  "revertLayers": function () {},
  "save": function () {},
  "_enableLayerDelete": function () {},
  "_disableLayerDelete": function () {},
  "_removeLayer": function () {},
  "_onMouseMove": function () {},
  "_hasAvailableLayers": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "enabled": function () {}
};
L.EditToolbar.Delete.MarkerDrag.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "addHooks": function () {},
  "removeHooks": function () {},
  "moved": function () {},
  "_onDragStart": function () {},
  "_onDrag": function () {},
  "_onDragEnd": function () {},
  "_initHooks": function () {},
  "callInitHooks": function () {},
  "enable": function () {},
  "disable": function () {},
  "enabled": function () {}
};